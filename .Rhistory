install.packages("rlang")
install.packages("rlang")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(caret)
library(ggplot2)
library(tidymodels)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
install.packages(c("blob", "cli", "commonmark", "dbplyr", "dplyr", "dtplyr", "ggplot2", "googledrive", "googlesheets4", "gtable", "hardhat", "hms", "htmltools", "markdown", "modelr", "parallelly", "pillar", "prodlim", "ps", "rmarkdown", "tibble", "vctrs", "xfun"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
install.packages(c("cli", "htmltools", "xfun"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(caret)
library(ggplot2)
library(tidymodels)
install.packages("workflowsets")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(caret)
library(ggplot2)
library(tidymodels)
data(mtcars)
head(mtcars)
summary(cars)
# Scatterplot matrix of mtcars dataset
ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point() +
labs(title = "Scatterplot Matrix of mtcars dataset")
# Fit a linear regression model
lm_fit <- lm(mpg ~ wt, data = mtcars)
# Print the summary of the model
summary(lm_fit)
# Use 10-fold cross-validation to assess the accuracy of the model
lm_cv <- train(mpg ~ wt, data = mtcars, method = "lm", trControl = trainControl(method = "cv", number = 10))
# Print the accuracy of the model
lm_cv$results$RMSE
knitr::opts_chunk$set(echo = TRUE)
# Use 10-fold cross-validation to assess the accuracy of the model
lm_cv <- train(mpg ~ wt, data = mtcars, method = "lm", trControl = trainControl(method = "cv", number = 10))
library(tidyverse)
library(caret)
library(ggplot2)
library(tidymodels)
data(mtcars)
head(mtcars)
summary(cars)
# Scatterplot matrix of mtcars dataset
ggplot(mtcars, aes(x = mpg, y = wt)) + geom_point() +
labs(title = "Scatterplot Matrix of mtcars dataset")
# Fit a linear regression model
lm_fit <- lm(mpg ~ wt, data = mtcars)
# Print the summary of the model
summary(lm_fit)
# Use 10-fold cross-validation to assess the accuracy of the model
lm_cv <- train(mpg ~ wt, data = mtcars, method = "lm", trControl = trainControl(method = "cv", number = 10))
# Print the accuracy of the model
lm_cv$results$RMSE
setwd("C:/Users/kh/Documents/WQD7001")
df<-read.csv('sales_by_category.csv')
df
barplot(df)
barplot(t(as.matrix(df)),beside=TRUE)
df<-read.csv(file='sales_by_category.csv')
barplot(df$Sales)
barplot(df$Sales, names.arg=df$Products)
df<-read.csv(file='sales_by_category.csv')
# Load dplyr
library(dplyr)
agg_tbl <- df %>% group_by(Products) %>%
summarise(sum_sales = sum(Sales),
.groups = 'drop')
agg_tbl
# Convert tibble to df
df2 <- agg_tbl %>% as.data.frame()
df2
barplot(df2$Sales, names.arg=df2$Products)
barplot(df2$sum_sales, names.arg=df2$Products)
df_line.data <- read.csv(file="products_order_by_months.csv")
view(df_line.data)
View(df_line.data)
View(df_line.data)
df_line
df_line.data
p1 <- ggplot() + geom_line(aes(y = Number.of.Orders, x = Month),
data = df_line.data)
library(ggplot2)
p1 <- ggplot() + geom_line(aes(y = Number.of.Orders, x = Month),
data = df_line.data)
p1
p1 <- ggplot() + geom_line(aes(y = Number.of.Orders, x = Months),
data = df_line.data)
p1
by_months.csv")
View(df_line)
View(df_line)
df_line
df_line <- read.csv(file="products_order_by_months.csv")
df_line <- read.csv(file="products_order_by_months.csv")
df_line
df_line$Month <- as.Date(paste0(df_line$Months, "-01"), format = "%B-%Y-%d")
df_line
df_line <- read.csv(file="products_order_by_months.csv")
df_line$Months <- as.Date(paste0(df_line$Months, "-01"), format = "%B-%y-%d")
ggplot(df_line, aes(x = Months, y = Number.of.Orders, color = Products)) +
geom_line() +
labs(title = "Number of Orders by Product and Month", x = "Month", y = "Number of Orders")
df_line <- read.csv(file="products_order_by_months.csv")
df_line <- df_line %>%
mutate(Months = recode(Months, "April" = "Apr", "June" = "Jun", "July" = "Jul"))
df_line
df_line$Months <- as.Date(paste0(df_line$Months, "-01"), format = "%B-%y-%d")
df_line
ggplot(df_line, aes(x = Months, y = Number.of.Orders, color = Products)) +
geom_line() +
labs(title = "Number of Orders by Product and Month", x = "Month", y = "Number of Orders")
df_line <- read.csv(file="products_order_by_months.csv")
df_line <- df_line %>%
mutate(Months = recode(Months, "April" = "Apr", "June" = "Jun", "July" = "Jul"))
# Convert Months column to Date format
df_line$Months <- as.Date(paste0(df_line$Months, "-01"), format = "%B-%d-%y")
ggplot(df_line, aes(x = Months, y = Number.of.Orders, color = `Products`)) +
geom_line() +
labs(title = "Number of Orders by Product and Month", x = "Month", y = "Number of Orders")
df_line <- read.csv(file="products_order_by_months.csv")
df_line
# Rename values in Month column
df_line <- df_line %>%
mutate(Months = recode(Months, "April" = "Apr", "June" = "Jun", "July" = "Jul"))
# Convert Months column to Date format
df_line$Months <- as.Date(paste0(df_line$Months, "-01"), format = "%B-%d-%y")
# Check for missing values
summary(df_line)
"products_order_by_months.csv")
df_line <- read.csv(file="products_order_by_months.csv")
df_line
df_line <- df_line %>%
mutate(Months = recode(Months, "April" = "Apr", "June" = "Jun", "July" = "Jul"))
# Convert Months column to factor with correct order
df_line$Months <- factor(df_line$Months, levels = c("January", "February", "March", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
# Check for missing values
summary(df_line)
View(df_line.data)
View(df_line)
# Convert Months column to factor with correct order
df_line$Months <- factor(df_line$Months, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(df_line)
onths.csv")
df_line
ne %>%
mutate(Months = recode(Months, "April" = "Apr", "June" = "Jun", "July" = "Jul"))
# Convert Months column to factor with correct order
df_line$Months <- factor(df_line$Months, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
# Check for missing values
summary(df_line)
View(df_line)
mutate(Months = recode(Months,
# Convert Months column to factor with correct order
df_line$Months <- factor(df_line$Months, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(df_line)
df_line <- read.csv(file="products_order_by_months.csv")
df_line
n
df_line <- df_line %>%
mutate(Months = recode(Months
# Convert Months column to factor with correct order
df_line$Months <- factor(df_line$Months, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
# Check for missing values
summary(df_line)
View(df_line)
# Create line chart
ggplot(df_line, aes(x = Months, y = Number.of.Orders, color = `Products`)) +
geom_line() +
labs(title = "Number of Orders by Product and Month", x = "Month", y = "Number of Orders")
df_line <- read.csv(file="products_order_by_months.csv")
df_line
mutate(Months = recode(Months, "Jan" = "Jan", "Feb" = "Feb", "Mar" = "Mar", "April" = "Apr", "June" = "Jun", "July" = "Jul"))
# Convert Months column to factor with correct order
df_line$Months <- factor(df_line$Months, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(df_line)
df_line <- read.csv(file="products_order_by_months.csv")
df_line
df_line <- df_line %>%
mutate(Months = recode(Months, "Jan" = "Jan", "Feb" = "Feb", "Mar" = "Mar", "April" = "Apr", "June" = "Jun", "July" = "Jul"))
# Convert Months column to factor with correct order
df_line$Months <- factor(df_line$Months, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(df_line)
# Create line chart
ggplot(df_line, aes(x = Months, y = Number_of_Orders, color = `Products`)) +
geom_line() +
labs(title = "Number of Orders by Product and Month", x = "Month", y = "Number of Orders")
df_line <- read.csv(file="products_order_by_months.csv")
df_line
df_line <- df_line %>%
mutate(Months = recode(Months, "April" = "Apr", "June" = "Jun", "July" = "Jul"))
# Convert Months column to factor with correct order
df_line$Months <- factor(df_line$Months, levels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))
View(df_line)
ggplot(df_line, aes(x = Months, y = Number_of_Orders, color = Products)) +
geom_line() +
scale_y_continuous(limits = c(0, 120), breaks = seq(0, 120, by = 20)) +
labs(title = "Number of Orders by Product and Month", x = "Month", y = "Number of Orders")
ggplot(df_line, aes(x = Months, y = Number.of.Orders)) +
geom_line() +
labs(title = "Number of Orders by Month", x = "Month", y = "Number of Orders")
ggplot(df_line, aes(x = Months, y = Number_of_Orders)) +
geom_line() +
labs(title = "Number of Orders by Month", x = "Month", y = "Number of Orders")
